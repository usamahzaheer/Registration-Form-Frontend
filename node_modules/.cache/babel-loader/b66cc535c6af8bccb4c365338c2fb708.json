{"ast":null,"code":"import _classCallCheck from\"D:\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";// i did the basic form validation rage\n// Token authetication using local storage\nimport React,{Component}from\"react\";import{Redirect}from\"react-router-dom\";var Login=/*#__PURE__*/function(_Component){_inherits(Login,_Component);var _super=_createSuper(Login);// state objects are initialized inside constructor\nfunction Login(){var _this;_classCallCheck(this,Login);_this=_super.call(this);var token=localStorage.getItem(\"token\");var loggedIn=true;if(token==null){loggedIn=false;}_this.state={// initializing state of the component  using js objects which store informattion about the component\nname:\"\",password:\"\",nameError:\"\",passwordError:\"\",loggedIn:\"\"};return _this;}// valid func for applying basic validation rules against user input\n_createClass(Login,[{key:\"valid\",value:function valid(){// if \"name\" object does'nt have \"@\" in his text & password lenght is less 6 then \nif(!this.state.name.includes(\"@\")&&this.state.password.length<6){// then using setState property nameerror and password error object has error message value it\nthis.setState({nameError:\"invalid Eame\",passwordError:\"password lenght should be more than 5\"});}// if only \"name\" does'nt have @ char, set only value for nameError \nelse if(!this.state.name.includes(\"@\")){this.setState({nameError:\"Invalid Email\"});}else if(this.state.password.length<5){this.setState({passwordError:\"password lenght should be more than 5\"});}else{// return ture if all sorted\nreturn true;}}},{key:\"submit\",value:function submit(){this.setState({nameError:\"\",passwordError:\"\"});// to authenticate using local storage i set mock email & password. so you will only logged in using these values. \n//  although valid function have conditions to check basic validation. \nif(this.valid()&&this.state.name===\"some@gmail.com\"&&this.state.password===\"12345678\"){//comment command cntl k + c\n//for authentication purpose we have to store token in local storage\nlocalStorage.setItem(\"token\",\"ieihfiwerhfihiwirihiu\");this.setState({loggedIn:true});alert(\"form has been submited\");}}},{key:\"render\",value:function render(){var _this2=this;if(this.state.loggedIn){// redirected to admin component untill we are logged in\nreturn/*#__PURE__*/React.createElement(Redirect,{to:\"/Admin\"});}return/*#__PURE__*/React.createElement(\"div\",{className:\"form\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Login\"),/*#__PURE__*/React.createElement(\"div\",{className:\"label\"},/*#__PURE__*/React.createElement(\"label\",null,\"Email Address\")),/*#__PURE__*/React.createElement(\"input\",{placeholder:\"Enter Email\",type:\"text\",onChange:function onChange(event){_this2.setState({name:event.target.value});}}),/*#__PURE__*/React.createElement(\"p\",{style:{color:\"red\"}},this.state.nameError),/*#__PURE__*/React.createElement(\"div\",{className:\"label\"},/*#__PURE__*/React.createElement(\"label\",null,\"Password\")),/*#__PURE__*/React.createElement(\"input\",{placeholder:\"Enter Password\",type:\"password\",onChange:function onChange(event){_this2.setState({password:event.target.value});}}),/*#__PURE__*/React.createElement(\"p\",{style:{color:\"red\"}},this.state.passwordError),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this2.submit();}},\"Submit\"));}}]);return Login;}(Component);export{Login as default};","map":{"version":3,"sources":["D:/my-app/src/components/login.js"],"names":["React","Component","Redirect","Login","token","localStorage","getItem","loggedIn","state","name","password","nameError","passwordError","includes","length","setState","valid","setItem","alert","event","target","value","color","submit"],"mappings":"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","sourcesContent":["// i did the basic form validation rage\r\n// Token authetication using local storage\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\"\r\nexport default class Login extends Component {\r\n    // state objects are initialized inside constructor\r\n    constructor() {\r\n        super();\r\n        const token = localStorage.getItem(\"token\")\r\n        let loggedIn = true\r\n        if(token== null){\r\n            loggedIn = false\r\n        }\r\n        this.state = {\r\n            // initializing state of the component  using js objects which store informattion about the component\r\n            name: \"\",\r\n            password: \"\",\r\n            nameError: \"\",\r\n            passwordError: \"\",\r\n            loggedIn:\"\"\r\n        }\r\n    }\r\n\r\n// valid func for applying basic validation rules against user input\r\n    valid() {\r\n        // if \"name\" object does'nt have \"@\" in his text & password lenght is less 6 then \r\n        if (!this.state.name.includes(\"@\") && this.state.password.length < 6) {\r\n            // then using setState property nameerror and password error object has error message value it\r\n            this.setState(\r\n                { nameError: \"invalid Eame\", passwordError: \"password lenght should be more than 5\" }\r\n            )\r\n        }\r\n        // if only \"name\" does'nt have @ char, set only value for nameError \r\n        else if (!this.state.name.includes(\"@\")) {\r\n            this.setState({ nameError: \"Invalid Email\" })\r\n        }\r\n        else if (this.state.password.length < 5) {\r\n            this.setState({ passwordError: \"password lenght should be more than 5\" })\r\n        }\r\n        else {\r\n            // return ture if all sorted\r\n            return true;\r\n        }\r\n    }\r\n    submit()\r\n    {\r\n      this.setState({nameError:\"\", passwordError:\"\"})\r\n      // to authenticate using local storage i set mock email & password. so you will only logged in using these values. \r\n    //  although valid function have conditions to check basic validation. \r\n        if(this.valid() && this.state.name===\"some@gmail.com\" && this.state.password === \"12345678\" )\r\n        {  \r\n            //comment command cntl k + c\r\n            //for authentication purpose we have to store token in local storage\r\n            localStorage.setItem(\"token\", \"ieihfiwerhfihiwirihiu\")\r\n             this.setState(\r\n          {\r\n              loggedIn:true\r\n          }\r\n      )\r\n            alert(\"form has been submited\")\r\n        }\r\n     \r\n    }\r\n    render() {\r\n        if(this.state.loggedIn){\r\n            // redirected to admin component untill we are logged in\r\n            return <Redirect to={\"/Admin\"} />\r\n        }\r\n        return (\r\n            <div className=\"form\">\r\n                <h1>Login</h1>\r\n                <div className=\"label\"><label >Email Address</label></div>\r\n                {/* on changing the input field by user, that text value will be store in \"name\" object which store in constructor func using setstate property */}\r\n                <input placeholder=\"Enter Email\" type=\"text\" onChange={(event) => { this.setState({ name: event.target.value }) }} />\r\n               {/* eror message will displayed depending on value store in nameError object */}\r\n                <p style={{ color: \"red\" }}>{this.state.nameError}</p>\r\n               <div className=\"label\"><label>Password</label></div> \r\n               {/* same as above input field except object which is password in this case */}\r\n                <input placeholder=\"Enter Password\" type=\"password\" onChange={(event) => { this.setState({ password: event.target.value }) }} />\r\n                <p style={{ color: \"red\" }}>{this.state.passwordError}</p>\r\n                {/* on click submit button submit() fuction will call, it's define above */}\r\n                <button onClick={() => this.submit()}>Submit</button>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}